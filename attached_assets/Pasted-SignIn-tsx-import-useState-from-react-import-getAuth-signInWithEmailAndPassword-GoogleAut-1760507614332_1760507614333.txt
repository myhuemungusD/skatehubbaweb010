SignIn.tsx
import { useState } from "react";
import { getAuth, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from "firebase/auth";
import { Link, useLocation } from "wouter";
import { auth } from "../firebase"; // your firebase init

export default function SignIn() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, navigate] = useLocation();

  const handleSignIn = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await signInWithEmailAndPassword(auth, email, password);
      navigate("/map");
    } catch (err: any) {
      setError(err.message);
    }
  };

  const handleGoogleSignIn = async () => {
    try {
      const provider = new GoogleAuthProvider();
      await signInWithPopup(auth, provider);
      navigate("/map");
    } catch (err: any) {
      setError(err.message);
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-[url('/assets/graffiti-bg.png')] bg-cover bg-center">
      <div className="bg-black/80 text-white p-8 rounded-2xl shadow-2xl w-[90%] max-w-md">
        <h1 className="text-3xl font-bold text-orange-500 mb-6 text-center">Sign In</h1>
        <form onSubmit={handleSignIn} className="space-y-4">
          <input
            type="email"
            placeholder="Email"
            className="w-full p-3 rounded bg-neutral-900 border border-neutral-700 focus:outline-none"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          <input
            type="password"
            placeholder="Password"
            className="w-full p-3 rounded bg-neutral-900 border border-neutral-700 focus:outline-none"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          {error && <p className="text-red-500 text-sm">{error}</p>}
          <button
            type="submit"
            className="w-full bg-orange-500 hover:bg-orange-600 text-white font-semibold p-3 rounded transition"
          >
            Sign In
          </button>
        </form>

        <div className="flex items-center my-4">
          <div className="flex-grow border-t border-neutral-700"></div>
          <span className="mx-3 text-neutral-400 text-sm">or</span>
          <div className="flex-grow border-t border-neutral-700"></div>
        </div>

        <button
          onClick={handleGoogleSignIn}
          className="w-full flex items-center justify-center bg-white text-black font-semibold p-3 rounded hover:bg-neutral-200 transition"
        >
          <img
            src="https://www.svgrepo.com/show/475656/google-color.svg"
            alt="Google"
            className="w-5 h-5 mr-2"
          />
          Sign in with Google
        </button>

        <p className="mt-6 text-center text-neutral-400 text-sm">
          Donâ€™t have an account?{" "}
          <Link href="/signup" className="text-orange-400 hover:underline">
            Sign up
          </Link>
        </p>
      </div>
    </div>
  );
}

Notes

Uses a semi-opaque black background (bg-black/80) to remove the transparent popup issue.

Keeps your orange/white/black theme and graffiti backdrop consistent.

signInWithPopup works instantly if Google is enabled in Firebase.

Place the graffiti image at /public/assets/graffiti-bg.png or update the URL.

Drop this file into client/src/pages/SignIn.tsx and import it in your router.
This will unify your sign-in look, support Google Auth, and eliminate the transparent overlay problem.