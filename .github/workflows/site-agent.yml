name: Site Agent
on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:
permissions:
  contents: write
  issues: write
concurrency:
  group: site-agent
  cancel-in-progress: false
jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Uptime check
        id: up
        run: |
          set -euo pipefail
          URL="https://skatehubba.com/healthz"
          start=$(date +%s%3N)
          CODE=$(curl -sS -o /tmp/body -w "%{http_code}" "$URL" || echo 000)
          dur=$(( $(date +%s%3N) - start ))
          echo "code=$CODE" >> $GITHUB_OUTPUT
          echo "dur=$dur"  >> $GITHUB_OUTPUT
          {
            echo "### Uptime"
            echo "URL: $URL"
            echo "HTTP: $CODE"
            echo "Time: ${dur}ms"
          } > agent-report.md
          test "$CODE" -ge 200 && test "$CODE" -lt 400 || exit 1
          test "$dur" -le 4000 || exit 1

      - name: Lighthouse (non-blocking)
        continue-on-error: true
        run: |
          npm --yes i -g @lhci/cli
          lhci autorun --collect.url=https://skatehubba.com --upload.target=temporary-public-storage \
            || echo "Lighthouse run failed" >> agent-report.md

      - name: Diagnostics
        if: failure()
        run: |
          sudo apt-get update >/dev/null
          sudo apt-get install -y dnsutils >/dev/null
          {
            echo ""
            echo "## Diagnostics ($(date -u))"
            echo "DNS:"; dig +short skatehubba.com || true
            echo ""
            echo "TLS:"
            echo | openssl s_client -servername skatehubba.com -connect skatehubba.com:443 2>/dev/null \
              | openssl x509 -noout -issuer -subject -dates || true
            echo ""
            echo "HTTP HEAD:"; curl -I https://skatehubba.com || true
            echo ""
            echo "Tracepath:"; tracepath -m 10 skatehubba.com || true
          } >> agent-report.md

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: agent-report
          path: agent-report.md

      - name: Notify webhook
        if: failure() && secrets.NOTIFY_WEBHOOK != ''
        env:
          WEBHOOK: ${{ secrets.NOTIFY_WEBHOOK }}
          CODE: ${{ steps.up.outputs.code }}
          DUR:  ${{ steps.up.outputs.dur }}
        run: |
          curl -sS -X POST -H 'Content-Type: application/json' \
            --data "{\"text\":\"skatehubba.com monitor FAILED (code:${CODE}, ${DUR}ms). Run: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" \
            "$WEBHOOK" || true

      - name: File GitHub Issue
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('agent-report.md','utf8');
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸš¨ skatehubba.com monitor failed â€“ run ${context.runId}`,
              body,
              labels: ['incident','ops']
            });
